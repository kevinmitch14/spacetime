import test from 'tape'
import { getStart } from '../../src/compute/_lib/yearStart.js'
import jan1s from './times/jan-1s.js'

test('paris jan 1st epochs', (t) => {
  let tz = "Europe/Paris"
  let paris = [
    -63162000000, -31539600000, -3600000, 31532400000, 63068400000, 94690800000, 126226800000, 157762800000, 189298800000, 220921200000, 252457200000, 283993200000, 315529200000, 347151600000, 378687600000, 410223600000, 441759600000, 473382000000, 504918000000, 536454000000,
    567990000000, 599612400000, 631148400000, 662684400000, 694220400000, 725842800000, 757378800000, 788914800000, 820450800000, 852073200000, 883609200000, 915145200000, 946681200000, 978303600000, 1009839600000, 1041375600000, 1072911600000, 1104534000000, 1136070000000, 1167606000000,
    1199142000000, 1230764400000, 1262300400000, 1293836400000, 1325372400000, 1356994800000, 1388530800000, 1420066800000, 1451602800000, 1483225200000, 1514761200000, 1546297200000, 1577833200000, 1609455600000, 1640991600000, 1672527600000, 1704063600000, 1735686000000, 1767222000000, 1798758000000, 1830294000000, 1861916400000
  ]
  for (let i = 0; i < paris.length; i += 1) {
    let year = 1968 + i
    let epoch = getStart(year, tz)
    t.equal(epoch, paris[i], `paris ${year}`)
    // let iso = spacetime(paris[i]).format('{iso-short}')
    // t.equal(iso, `${year}-01-01`, `paris iso ${year}`)
  }
  t.end()
})

test('vancouver jan 1st epochs', (t) => {
  let vancouver = [
    -63129600000, -31507200000, 28800000, 31564800000, 63100800000, 94723200000, 126259200000, 157795200000, 189331200000, 220953600000, 252489600000, 284025600000, 315561600000, 347184000000, 378720000000, 410256000000,
    441792000000, 473414400000, 504950400000, 536486400000, 568022400000, 599644800000, 631180800000, 662716800000, 694252800000, 725875200000, 757411200000, 788947200000, 820483200000, 852105600000, 883641600000, 915177600000,
    946713600000, 978336000000, 1009872000000, 1041408000000, 1072944000000, 1104566400000, 1136102400000, 1167638400000, 1199174400000, 1230796800000, 1262332800000, 1293868800000, 1325404800000, 1357027200000, 1388563200000, 1420099200000,
    1451635200000, 1483257600000, 1514793600000, 1546329600000, 1577865600000, 1609488000000, 1641024000000, 1672560000000, 1704096000000, 1735718400000, 1767254400000, 1798790400000, 1830326400000, 1861948800000
  ]
  for (let i = 0; i < vancouver.length; i += 1) {
    let year = 1968 + i
    let epoch = getStart(year, "America/Vancouver")
    t.equal(epoch, vancouver[i], `vancouver ${year}`)
  }
  t.end()
})
test('Cambodia jan 1st epochs', (t) => {
  let arr = [
    -63183600000, -31561200000, -25200000, 31510800000, 63046800000, 94669200000, 126205200000, 157741200000, 189277200000, 220899600000, 252435600000, 283971600000,
    315507600000, 347130000000, 378666000000, 410202000000, 441738000000, 473360400000, 504896400000, 536432400000, 567968400000, 599590800000, 631126800000, 662662800000,
    694198800000, 725821200000, 757357200000, 788893200000, 820429200000, 852051600000, 883587600000, 915123600000, 946659600000, 978282000000, 1009818000000, 1041354000000,
    1072890000000, 1104512400000, 1136048400000, 1167584400000, 1199120400000, 1230742800000, 1262278800000, 1293814800000, 1325350800000, 1356973200000, 1388509200000, 1420045200000,
    1451581200000, 1483203600000, 1514739600000, 1546275600000, 1577811600000, 1609434000000, 1640970000000, 1672506000000, 1704042000000, 1735664400000, 1767200400000, 1798736400000, 1830272400000, 1861894800000
  ]
  for (let i = 0; i < arr.length; i += 1) {
    let year = 1968 + i
    let epoch = getStart(year, "Asia/Phnom_Penh")
    t.equal(epoch, arr[i], `Cambodia ${year}`)
  }
  t.end()
})

test('new zealand jan 1st epochs', (t) => {
  let arr = [
    157719600000, 189255600000, 220878000000, 252414000000, 283950000000, 315486000000, 347108400000, 378644400000, 410180400000,
    441716400000, 473338800000, 504874800000, 536410800000, 567946800000, 599569200000, 631105200000, 662641200000,
    694177200000, 725799600000, 757335600000, 788871600000, 820407600000, 852030000000, 883566000000, 915102000000,
    946638000000, 978260400000, 1009796400000, 1041332400000, 1072868400000, 1104490800000, 1136026800000, 1167562800000,
    1199098800000, 1230721200000, 1262257200000, 1293793200000, 1325329200000, 1356951600000, 1388487600000, 1420023600000,
    1451559600000, 1483182000000, 1514718000000, 1546254000000, 1577790000000, 1609412400000, 1640948400000, 1672484400000,
    1704020400000, 1735642800000, 1767178800000, 1798714800000, 1830250800000, 1861873200000
  ]
  for (let i = 0; i < arr.length; i += 1) {
    let year = 1975 + i
    let epoch = getStart(year, "Pacific/Auckland")
    t.equal(epoch, arr[i], `auckland ${year}`)
  }
  t.end()
})


test('random jan 1st epochs', (t) => {

  jan1s.forEach(a => {
    let [year, tz, epoch] = a

    let n = getStart(year, tz)
    t.equal(n, epoch, `[year-start-jan1] ${year} ${tz}`)

    // let iso = spacetime(epoch, tz).format('iso-short')
    // t.equal(iso, `${year}-01-01`, `iso ${year} ${tz}`)

  })

  t.end()
})